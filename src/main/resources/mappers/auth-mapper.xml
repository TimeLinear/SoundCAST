<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="auth">
 	

 <resultMap id="authorityMap" type="simpleGrantedAuthority">
      <constructor>
         <arg column="authority" javaType="string" />
      </constructor>
   </resultMap>
   
   
   <resultMap id="memberExtMap" type="memberExt">
         <id column="MEMBER_NO" property="memberNo"/>
         <result column="MEMBER_NICKNAME" property="memberNickname"/>
         <result column="MEMBER_EMAIL" property="memberEmail"/>
         <result column="MEMBER_INTRODUCE" property="memberIntroduce"/>
         <result column="MEMBER_CREATE_DATE" property="memberCreateDate"/>
         <result column="MEMBER_MODIFY_DATE" property="memberModifyDate"/>
         <result column="MEMBER_STATUS" property="memberStatus"/>
       
       	<result property="follower" column="follower_count"/>
       
       <association property="comment" javaType="comment">
           <id column="COMMENT_NO" property="commentNo"/>
           <result column="COMMENT_WRITER_MEMBER_NO" property="commentWriterMemberNo"/>
           <result column="COMMENT_MEMBER_NO" property="commentMemberNo"/>
           <result column="COMMENT_TEXT" property="commentText"/>
           <result column="COMMENT_CREATE_DATE" property="commentCreateDate"/>
           <result column="COMMENT_MODIFY_DATE" property="commentModifyDate"/>
       </association>
       
       
       <association property="memberBanner" javaType="memberBanner">
           <id column="MEMBER_BANNER_NO" property="memberBannerNo"/>
           <result column="MEMBER_BANNER_PATH" property="memberBannerPath"/>
       </association>
       
<!--       <association property="memberGrade" javaType="memberGrade">
           <id column="MEMBER_GRADE_NO" property="memberGradeNo"/>
           <result column="MEMBER_GRADE_NAME" property="memberGradeName"/>
       </association>
       -->
       
       <association property="memberSocial" javaType="memberSocial">
           <id column="MEMBER_SOCIAL_MEMBER_NO" property="memberSocialMemberNo"/>
           <result column="MEMBER_SOCIAL_SOCIAL_NAME" property="memberSocialSocialName"/>
           <result column="MEMBER_SOCIAL_SOCIAL_ID" property="memberSocialSocialId"/>
       </association>
       
       <collection property="following" ofType="follow">
            <result property="followMemberNo" column="following_member_no"/>
            <result property="followTargetMemberNo" column="following_target_member_no"/>
        </collection>
       

      <collection property="authorities"
               javaType="list"
               ofType="simpleGrantedAuthority">
         <constructor>
               <arg column="MEMBER_GRADE_NAME" javaType="string"/>
           </constructor>
      </collection>
       
       <collection property="follow" ofType="follow" >
           <id column="FOLLOW_MEMBER_NO" property="followMemberNo"/>
           <result column="FOLLOW_TARGET_MEMBER_NO" property="followTargetMemberNo"/>
       </collection>
   
       <collection property="profileImage" ofType="profileImage">
           <id column="PROFILE_IMAGE_NO" property="profileImageNo"/>
           <result column="PROFILE_IMAGE_PATH" property="profileImagePath"/>
       </collection>
   </resultMap>
 
 <select id="loadUserByUsername" resultMap="memberExtMap">
      SELECT MEMBER_NO , PROFILE_IMAGE_PATH, MEMBER_BANNER_PATH, MEMBER_SOCIAL_SOCIAL_NAME, MEMBER_SOCIAL_SOCIAL_ID,
            MEMBER_NICKNAME, MEMBER_EMAIL, MEMBER_INTRODUCE, MEMBER_GRADE_NAME
      FROM MEMBER
      		JOIN MEMBER_SOCIAL ON MEMBER_SOCIAL_MEMBER_NO = MEMBER_NO
      		JOIN MEMBER_GRADE USING(MEMBER_GRADE_NO)
      		JOIN MEMBER_BANNER USING(MEMBER_BANNER_NO)
      		JOIN PROFILE_IMAGE ON MEMBER_PROFILE_IMAGE_NO = PROFILE_IMAGE_NO
      		
      WHERE
         MEMBER_SOCIAL_SOCIAL_ID = #{socialId} 
         AND
         MEMBER_SOCIAL_SOCIAL_NAME = #{socialType}
         AND
         MEMBER_STATUS = 'Y'
   </select>
 	
 	<!--각 칼럼의 FOLLOW 리스트와 COUNT를 구하는 쿼리
SELECT
    fm.MEMBER_NO AS FOLLOW_MEMBER_NO,
    ft.MEMBER_NO AS FOLLOW_TARGET_MEMBER_NO,
    COUNT(f.FOLLOW_MEMBER_NO) AS FOLLOW_COUNT,
    GROUP_CONCAT(f.FOLLOW_TARGET_MEMBER_NO) AS FOLLOW_LIST
FROM
    FOLLOW f
JOIN
    MEMBER fm ON f.FOLLOW_MEMBER_NO = fm.MEMBER_NO
JOIN
    MEMBER ft ON f.FOLLOW_TARGET_MEMBER_NO = ft.MEMBER_NO
GROUP BY
    f.FOLLOW_MEMBER_NO;
 	
 	-->
 	
 	
 	
 	
 	<insert id="insertProfileImage" parameterType="memberExt" useGeneratedKeys="true">
 		<selectKey resultType="int" order="BEFORE" keyProperty="profileImage.profileImageNo" >
 			SELECT SEQ_MEMBER_PROFILE_IMAGE_NO.NEXTVAL FROM DUAL
 		</selectKey>
 	
 	<!-- 1번 selectKey 사용하여 MemberExt 객체에 profileImageNo 얻어오기 -->
 		INSERT INTO PROFILE_IMAGE
 		VALUES(
			#{profileImage.profileImageNo},
			#{profileImage.profileImagePath}
		)
 		
 	</insert>
 	
 	
 	
 	
 	
 	<insert id="insertMember" useGeneratedKeys="true">
	
		<selectKey resultType="int" order="BEFORE" keyProperty="memberNo">
			SELECT SEQ_MEMBER_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		 	INSERT INTO MEMBER
		 	VALUES(
				#{memberNo},
				#{profileImage.profileImageNo},
				DEFAULT,
				DEFAULT,
				#{memberNickname},
				#{memberEmail},
				DEFAULT,
				DEFAULT,
				DEFAULT,
				DEFAULT
			)
 	
 	</insert>
 	
 	 <insert id="insertMemberSocial">
 		INSERT INTO MEMBER_SOCIAL
 		VALUES(
			#{memberNo},
			#{memberSocial.memberSocialSocialName},
			#{memberSocial.memberSocialSocialId}
		)
 	
 	</insert>
 	
 
 
 	
 </mapper>