<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="song">

	<resultMap id="songExtMap" type="songExt">
		<id column="SONG_NO" property="songNo" />
		<result column="SONG_MEMBER_NO" property="songMemberNo" />
		<result column="SONG_MOOD_NO" property="songMoodNo" />
		<result column="SONG_GENRE_NO" property="songGenreNo" />
		<result column="SONG_IMAGE_NO" property="songImageNo" />
		<result column="SONG_FILE_NO" property="songFileNo" />
		<result column="SONG_PLACE_NO" property="songPlaceNo" />
		<result column="SONG_TITLE" property="songTitle" />
		<result column="SONG_LICENSE" property="songLicense" />
		<result column="SONG_DETAIL" property="songDetail" />
		<result column="SONG_CREATE_DATE" property="songCreateDate" />
		<result column="SONG_MODIFY_DATE" property="songModifyDate" />
		<result column="SONG_STATUS" property="songStatus" />

		<result column="MEMBER_NICKNAME" property="memberNickname" />
		<result column="MOOD_NAME" property="songMoodName" />
		<result column="GENRE_NAME" property="songGenreName" />

		<association property="songImage" javaType="songImageExt">
			<id column="SONG_IMAGE_NO" property="songImageNo" />
			<result column="SONG_IMAGE_PATH_NO" property="songImagePathNo" />
			<result column="SONG_IMAGE_PATH_NAME" property="songImagePathName" />
			<result column="SONG_IMAGE_NAME" property="songImageName" />
		</association>

		<association property="songFile" javaType="songFileExt">
			<id column="SONG_FILE_SONG_PATH_NO" property="songFileSongPathNo" />
			<result column="SONG_FILE_CHANGE_NAME" property="songFileChangeName" />
			<result column="SONG_FILE_ORIGIN_NAME" property="songFileOriginName" />
			<result column="SONG_PATH_NAME" property="songFileSongPathName" />
		</association>
	</resultMap>
	
	
	<select id="selectSong" resultMap="songExtMap">
		SELECT 
			SONG_NO,
			SONG_MEMBER_NO,
			SONG_MOOD_NO,
			SONG_GENRE_NO, 
			SONG_IMAGE_NO,
			SONG_FILE_NO,
			
			S.SONG_PLACE_NO,
			S.SONG_TITLE,
			S.SONG_LICENSE, 
			S.SONG_DETAIL,
						
			M.MEMBER_NICKNAME,
			
			G.GENRE_NAME,
			D.MOOD_NAME,
						
			I.SONG_IMAGE_PATH_NO,
			I.SONG_IMAGE_NAME,
			IP.SONG_IMAGE_PATH_NAME,
						
			F.SONG_FILE_SONG_PATH_NO,
			F.SONG_FILE_CHANGE_NAME,
			F.SONG_FILE_ORIGIN_NAME,
			P.SONG_PATH_NAME			
								
		FROM SONG S
			LEFT JOIN MEMBER M ON (S.SONG_MEMBER_NO = M.MEMBER_NO)
			LEFT JOIN GENRE G ON (S.SONG_GENRE_NO = G.GENRE_NO)
			LEFT JOIN MOOD D ON (S.SONG_MOOD_NO = D.MOOD_NO)
			
			LEFT JOIN SONG_IMAGE I USING (SONG_IMAGE_NO)
			LEFT JOIN SONG_IMAGE_PATH IP ON (I.SONG_IMAGE_PATH_NO = IP.SONG_IMAGE_PATH_NO)
			
			LEFT JOIN SONG_FILE F USING (SONG_FILE_NO)
			LEFT JOIN SONG_PATH P ON (P.SONG_PATH_NO = F.SONG_FILE_SONG_PATH_NO)
			
		WHERE SONG_NO = #{songNo}
		  AND SONG_STATUS = 'Y'
	</select>


	<select id="selectSongList" resultMap="songExtMap">
		SELECT 
			SONG_NO,
			SONG_MEMBER_NO,
			SONG_MOOD_NO,
			SONG_GENRE_NO, 
			SONG_IMAGE_NO,
			SONG_FILE_NO,
			
			S.SONG_PLACE_NO,
			S.SONG_TITLE,
			S.SONG_LICENSE, 
			S.SONG_DETAIL,
						
			M.MEMBER_NICKNAME,
			
			G.GENRE_NAME,
			D.MOOD_NAME,
						
			I.SONG_IMAGE_PATH_NO,
			I.SONG_IMAGE_NAME,
			IP.SONG_IMAGE_PATH_NAME,
						
			F.SONG_FILE_SONG_PATH_NO,
			F.SONG_FILE_CHANGE_NAME,
			F.SONG_FILE_ORIGIN_NAME,
			P.SONG_PATH_NAME			
								
		FROM SONG S
			LEFT JOIN MEMBER M ON (S.SONG_MEMBER_NO = M.MEMBER_NO)
			LEFT JOIN GENRE G ON (S.SONG_GENRE_NO = G.GENRE_NO)
			LEFT JOIN MOOD D ON (S.SONG_MOOD_NO = D.MOOD_NO)
			
			LEFT JOIN SONG_IMAGE I USING (SONG_IMAGE_NO)
			LEFT JOIN SONG_IMAGE_PATH IP ON (I.SONG_IMAGE_PATH_NO = IP.SONG_IMAGE_PATH_NO)
			
			LEFT JOIN SONG_FILE F USING (SONG_FILE_NO)
			LEFT JOIN SONG_PATH P ON (P.SONG_PATH_NO = F.SONG_FILE_SONG_PATH_NO)
		
		WHERE SONG_PLACE_NO = #{placeNo}
			<if test="genre > 0">
				AND SONG_GENRE_NO = #{genre}
			</if>
			<if test="mood > 0">
				AND SONG_MOOD_NO = #{mood}
			</if>
			<if test="!keyword.equals('')">
				AND (UPPER(SONG_TITLE) LIKE '%'||#{keyword}||'%' OR UPPER(MEMBER_NICKNAME) LIKE '%'||#{keyword}||'%')
			</if>
			AND SONG_STATUS = 'Y'
	</select>

	<select id="selectAllGenres" resultType="genre">
		SELECT *
		FROM GENRE
		ORDER BY GENRE_NO
	</select>

	<select id="selectAllMoods" resultType="mood">
		SELECT *
		FROM MOOD
		ORDER BY MOOD_NO
	</select>
	
	<select id="selectSongMainList" resultMap="songExtMap">
		SELECT 
			SONG_NO,
			SONG_MEMBER_NO,
			SONG_MOOD_NO,
			SONG_GENRE_NO, 
			SONG_IMAGE_NO,
			SONG_FILE_NO,
			
			S.SONG_PLACE_NO,
			S.SONG_TITLE,
			S.SONG_LICENSE, 
			S.SONG_DETAIL,
						
			M.MEMBER_NICKNAME,
			
			G.GENRE_NAME,
			D.MOOD_NAME,
						
			I.SONG_IMAGE_PATH_NO,
			I.SONG_IMAGE_NAME,
			IP.SONG_IMAGE_PATH_NAME,
						
			F.SONG_FILE_SONG_PATH_NO,
			F.SONG_FILE_CHANGE_NAME,
			F.SONG_FILE_ORIGIN_NAME,
			P.SONG_PATH_NAME			
								
		FROM (
			SELECT *
				FROM(
					SELECT * 
					FROM SONG 
					ORDER BY SONG_CREATE_DATE DESC
				)
			WHERE ROWNUM <![CDATA[ <= ]]>20
			  AND SONG_PLACE_NO = #{placeNo}
		) S
			    		
			LEFT JOIN MEMBER M ON (S.SONG_MEMBER_NO = M.MEMBER_NO)
			LEFT JOIN GENRE G ON (S.SONG_GENRE_NO = G.GENRE_NO)
			LEFT JOIN MOOD D ON (S.SONG_MOOD_NO = D.MOOD_NO)
			
			LEFT JOIN SONG_IMAGE I USING (SONG_IMAGE_NO)
			LEFT JOIN SONG_IMAGE_PATH IP ON (I.SONG_IMAGE_PATH_NO = IP.SONG_IMAGE_PATH_NO)
			
			LEFT JOIN SONG_FILE F USING (SONG_FILE_NO)
			LEFT JOIN SONG_PATH P ON (P.SONG_PATH_NO = F.SONG_FILE_SONG_PATH_NO)
			
		WHERE SONG_STATUS = 'Y'
		
	</select>
	
	

	<insert id="insertNewSong" parameterType="songFile" useGeneratedKeys="true">
		
		INSERT INTO SONG_FILE 
			VALUES (
				SEQ_SONG_FILE_NO.NEXTVAL, 
				#{songFileSongPathNo}, 
				#{songFileChangeName}, 
				#{songFileOriginName}
			)
					
		<selectKey keyProperty="songFileNo" resultType="int" order="AFTER">
			SELECT SEQ_SONG_FILE_NO.CURRVAL FROM DUAL
   		</selectKey>
	
	</insert>
	
	<insert id="insertNewImage" parameterType="songImage" useGeneratedKeys="true">
		
		INSERT INTO SONG_IMAGE 
			VALUES (
				SEQ_SONG_IMAGE_NO.NEXTVAL, 
				#{songImagePathNo}, 
				#{songImageName}
			)
					
		<selectKey keyProperty="songImageNo" resultType="int" order="AFTER">
			SELECT SEQ_SONG_IMAGE_NO.CURRVAL FROM DUAL
   		</selectKey>
	
	</insert>

	<update id="updateSongBasicInfo">
		UPDATE SONG
		SET (
			SONG_MOOD_NO = #{songMoodNo},
			SONG_GENRE_NO = #{songGenreNo},
			SONG_TITLE = #{songTitle},
			SONG_LICENSE = #{songLicense},
			SONG_DETAIL = #{songDetail},
			SONG_MODIFY_DATE = SYSDATE
			<if test="songFileNo != 0">
				, SONG_FILE_NO = #{songFileNo}
			</if>
			<if test="songImageNo != 0">
				, SONG_IMAGE_NO = #{songImageNo}
			</if>
		)
		WHERE SONG_NO = #{songNo}
	
	</update>
	
	
	<select id="getMemberSongList" resultMap="songExtMap">
		SELECT
			SONG_NO,
			SONG_MEMBER_NO,
			SONG_MOOD_NO,
			SONG_GENRE_NO, 
			SONG_IMAGE_NO,
			SONG_FILE_NO,
			
			S.SONG_PLACE_NO,
			S.SONG_TITLE,
			S.SONG_LICENSE, 
			S.SONG_DETAIL,
						
			M.MEMBER_NICKNAME,
			
			G.GENRE_NAME,
			D.MOOD_NAME,
						
			I.SONG_IMAGE_PATH_NO,
			I.SONG_IMAGE_NAME,
			IP.SONG_IMAGE_PATH_NAME,
						
			F.SONG_FILE_SONG_PATH_NO,
			F.SONG_FILE_CHANGE_NAME,
			F.SONG_FILE_ORIGIN_NAME,
			P.SONG_PATH_NAME			
			
		FROM SONG S
			    		
			LEFT JOIN MEMBER M ON (S.SONG_MEMBER_NO = M.MEMBER_NO)
			LEFT JOIN GENRE G ON (S.SONG_GENRE_NO = G.GENRE_NO)
			LEFT JOIN MOOD D ON (S.SONG_MOOD_NO = D.MOOD_NO)
			
			LEFT JOIN SONG_IMAGE I USING (SONG_IMAGE_NO)
			LEFT JOIN SONG_IMAGE_PATH IP ON (I.SONG_IMAGE_PATH_NO = IP.SONG_IMAGE_PATH_NO)
			
			LEFT JOIN SONG_FILE F USING (SONG_FILE_NO)
			LEFT JOIN SONG_PATH P ON (P.SONG_PATH_NO = F.SONG_FILE_SONG_PATH_NO)
			
		WHERE SONG_MEMBER_NO = #{mNo}
		  AND SONG_STATUS = 'Y'
	
	</select>

	<select id="selectSongPath" resultType="string">
		SELECT SONG_PATH_NAME
		FROM SONG_PATH
		WHERE SONG_PATH_NO = #{songPathNo}
	</select>
	
	<select id="selectSongImagePath" resultType="string">
		SELECT SONG_IMAGE_PATH_NAME
		FROM SONG_IMAGE_PATH
		WHERE SONG_IMAGE_PATH_NO = #{songImagePathNo}
	</select>
	
	<insert id="insertSongFile" useGeneratedKeys="true">
		
		<selectKey keyProperty="songFileNo" resultType="int" order="BEFORE">
			SELECT SEQ_SONG_FILE_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO SONG_FILE
		VALUES(
			#{songFileNo},
			#{songFileSongPathNo},
			#{songFileChangeName},
			#{songFileOriginName}
		)
	</insert>

	<insert id="insertSongImage" useGeneratedKeys="true">
		
		<selectKey keyProperty="songImageNo" resultType="int" order="BEFORE">
			SELECT SEQ_SONG_IMAGE_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO SONG_IMAGE
		VALUES(
			#{songImageNo},
			#{songImagePathNo},
			#{songImageName}
		)
	</insert>
	
	<insert id="insertSong" useGeneratedKeys="true">
	
		<selectKey keyProperty="songNo" resultType="int" order="BEFORE">
			SELECT SEQ_SONG_NO.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO SONG
		VALUES(
			#{songNo},
			#{songMemberNo},
			#{songMoodNo},
			#{songGenreNo},
			#{songImageNo},
			#{songFileNo},
			#{songPlaceNo},
			#{songTitle},
			#{songLicense},
			#{songDetail},
			SYSDATE,
			SYSDATE,
			DEFAULT
		)
	</insert>
	
	<select id="checkDownload" resultType="download">
		SELECT *
			FROM DOWNLOAD
		WHERE DOWNLOAD_SONG_NO = #{songNo}
			AND DOWNLOAD_MEMBER_NO = #{memberNo}
			AND DOWNLOAD_DATE = TRUNC(SYSDATE,'DD')
	</select>
	
	<insert id="insertDownload">
		INSERT INTO DOWNLOAD
		VALUES (
			#{songNo},
			#{memberNo},
			TRUNC(SYSDATE,'DD')
		)
	</insert>
	
	<update id="updateSongStatus">
		UPDATE SONG
		SET SONG_STATUS = 'N'
		WHERE SONG_NO in
		<foreach collection="list" item="songNo" open="(" separator="," close=")">
			#{songNo}
		</foreach>
	</update>
	

	<!-- 관리자 파트 -->
	<select id="selectTop5Music" resultMap="songResultMap">
		SELECT
			DOWNLOAD_COUNT_NUMBER,
			SONG_IMAGE_NAME,
			SONG_IMAGE_PATH_NAME,
			SONG_TITLE,
			MEMBER_NICKNAME,
			GENRE_NAME,
			MOOD_NAME,
			SONG_LICENSE,
			SONG_NO
		FROM SONG
		LEFT JOIN SONG_IMAGE USING (SONG_IMAGE_NO)
		LEFT JOIN SONG_IMAGE_PATH USING (SONG_IMAGE_PATH_NO)
		LEFT JOIN MEMBER ON (SONG_MEMBER_NO = MEMBER_NO)
		JOIN DOWNLOAD_COUNT ON (SONG_NO = DOWNLOAD_COUNT_SONG_NO)
		LEFT JOIN MOOD ON (MOOD_NO = SONG_MOOD_NO)
		LEFT JOIN GENRE ON (GENRE_NO = SONG_GENRE_NO)
		WHERE SONG_STATUS = 'Y'
		AND TO_DATE(SONG_CREATE_DATE, 'YY/MM/DD') <![CDATA[>=]]> ADD_MONTHS(SYSDATE, -1)
		ORDER BY DOWNLOAD_COUNT_NUMBER DESC
	</select>
	
	<resultMap id="songResultMap" type="songExt">
	    <id property="songNo" column="SONG_NO"/>    
	    <result property="memberNickname" column="MEMBER_NICKNAME"/>    
	    <result property="songTitle" column="SONG_TITLE"/>
	    <result property="moodName" column="MOOD_NAME"/>
	    <result property="genreName" column="GENRE_NAME"/>
	    <result property="songLicense" column="SONG_LICENSE"/>
	    <result property="downloadCountNumber" column="DOWNLOAD_COUNT_NUMBER"/>
	    
	    <association property="songImage" javaType="songImageExt">
	        <result property="songImagePathName" column="SONG_IMAGE_PATH_NAME"/>
	        <result property="songImageName" column="SONG_IMAGE_NAME"/>
	    </association>
	</resultMap>
 
 	<select id="selectNewMusic" resultMap="songResultMap2">
 		SELECT
			SONG_IMAGE_NAME,
			SONG_IMAGE_PATH_NAME,
			SONG_TITLE,
			MEMBER_NICKNAME,
			GENRE_NAME,
			MOOD_NAME,
			SONG_LICENSE,
			SONG_CREATE_DATE
		FROM SONG
		LEFT JOIN SONG_IMAGE USING (SONG_IMAGE_NO)
		LEFT JOIN SONG_IMAGE_PATH USING (SONG_IMAGE_PATH_NO)
		LEFT JOIN MEMBER ON (SONG_MEMBER_NO = MEMBER_NO)
		LEFT JOIN MOOD ON (MOOD_NO = SONG_MOOD_NO)
		LEFT JOIN GENRE ON (GENRE_NO = SONG_GENRE_NO)
		WHERE SONG_STATUS = 'Y'
		ORDER BY SONG_CREATE_DATE DESC, SONG_TITLE ASC
 	</select>
 	
 	<resultMap id="songResultMap2" type="songExt">
	    <result property="memberNickname" column="MEMBER_NICKNAME"/>    
	    <result property="songTitle" column="SONG_TITLE"/>
	    <result property="moodName" column="MOOD_NAME"/>
	    <result property="genreName" column="GENRE_NAME"/>
	    <result property="songLicense" column="SONG_LICENSE"/>
	    <result property="songCreateDate" column="SONG_CREATE_DATE"/>
	    
	    <association property="songImage" javaType="songImageExt">
	        <result property="songImagePathName" column="SONG_IMAGE_PATH_NAME"/>
	        <result property="songImageName" column="SONG_IMAGE_NAME"/>
	    </association>
	</resultMap>

</mapper>
